package com.pocolifo.pocolifoclient.mixins;

import net.minecraft.client.Minecraft;
import net.minecraft.client.network.NetHandlerPlayClient;
import net.minecraft.network.play.client.C19PacketResourcePackStatus;
import net.minecraft.network.play.server.S48PacketResourcePackSend;
import org.spongepowered.asm.mixin.Mixin;
import org.spongepowered.asm.mixin.injection.At;
import org.spongepowered.asm.mixin.injection.Inject;
import org.spongepowered.asm.mixin.injection.callback.CallbackInfo;

@Mixin(NetHandlerPlayClient.class)
public class Mixin_Fix_ResourcePackVulnerability {
    @Inject(method = "handleResourcePack", at = @At("HEAD"), cancellable = true)
    public void handleResourcePack(S48PacketResourcePackSend packet, CallbackInfo ci) {
        String protocol = packet.getURL().substring(0, packet.getURL().indexOf("://"));

        if (!(protocol.equals("http") || protocol.equals("https") || protocol.equals("level")) || // bad proto
            protocol.equals("level") && (packet.getURL().contains("..") || packet.getURL().endsWith("/resources.zip"))) { // directory traversal
            Minecraft.getMinecraft().getNetHandler().getNetworkManager().sendPacket(new C19PacketResourcePackStatus(packet.getHash(), C19PacketResourcePackStatus.Action.FAILED_DOWNLOAD));
            ci.cancel();
        }
    }
}
